{
  "paragraphs": [
    {
      "text": "%md\n#  Chapter 3 - Recommending Music and the Audioscrobbler Data Set",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:52.073",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eChapter 3 - Recommending Music and the Audioscrobbler Data Set\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543251126026_1421246791",
      "id": "20181126-165206_92803118",
      "dateCreated": "2018-11-26 16:52:06.026",
      "dateStarted": "2018-11-28 17:58:52.203",
      "dateFinished": "2018-11-28 17:58:52.220",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval LIMIT \u003d 100000",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:52.303",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "LIMIT: Int \u003d 100000\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543346795505_-536421444",
      "id": "20181127-192635_1521740962",
      "dateCreated": "2018-11-27 19:26:35.505",
      "dateStarted": "2018-11-28 17:58:52.512",
      "dateFinished": "2018-11-28 17:58:54.718",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Scala imports\nAll of the required imports for Scala and Spark.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:54.765",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eScala imports\u003c/h2\u003e\n\u003cp\u003eAll of the required imports for Scala and Spark.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543251205097_-1836348140",
      "id": "20181126-165325_118613318",
      "dateCreated": "2018-11-26 16:53:25.097",
      "dateStarted": "2018-11-28 17:58:55.047",
      "dateFinished": "2018-11-28 17:58:55.079",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport org.apache.log4j.{Level, Logger}\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.ml.recommendation.{ALS, ALSModel}\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.{DataFrame, Dataset, Row, SparkSession}\n\nimport scala.collection.Map\nimport scala.collection.mutable.ArrayBuffer\nimport scala.util.Random\n\nimport spark.implicits._",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:55.147",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.log4j.{Level, Logger}\nimport org.apache.spark.broadcast.Broadcast\nimport org.apache.spark.ml.recommendation.{ALS, ALSModel}\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.{DataFrame, Dataset, Row, SparkSession}\nimport scala.collection.Map\nimport scala.collection.mutable.ArrayBuffer\nimport scala.util.Random\nimport spark.implicits._\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543251220516_-1526289470",
      "id": "20181126-165340_2039727148",
      "dateCreated": "2018-11-26 16:53:40.516",
      "dateStarted": "2018-11-28 17:58:55.496",
      "dateFinished": "2018-11-28 17:58:58.475",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Data loading\nDatasets are first loaded as `Dataset[String]`, they will be parsed later on.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:58.520",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eData loading\u003c/h2\u003e\n\u003cp\u003eDatasets are first loaded as \u003ccode\u003eDataset[String]\u003c/code\u003e, they will be parsed later on.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543251231868_-1448134904",
      "id": "20181126-165351_237880602",
      "dateCreated": "2018-11-26 16:53:51.868",
      "dateStarted": "2018-11-28 17:58:58.618",
      "dateFinished": "2018-11-28 17:58:58.630",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval base: String                       \u003d \"file:///zeppelin/data/recommender/\"\nval rawUserArtistData: Dataset[String] \u003d spark.read.textFile(base + \"user_artist_data.txt\").limit(LIMIT)\nval rawArtistData: Dataset[String]     \u003d spark.read.textFile(base + \"artist_data.txt\")\nval rawArtistAlias: Dataset[String]    \u003d spark.read.textFile(base + \"artist_alias.txt\")",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:58.717",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "base: String \u003d file:///zeppelin/data/recommender/\nrawUserArtistData: org.apache.spark.sql.Dataset[String] \u003d [value: string]\nrawArtistData: org.apache.spark.sql.Dataset[String] \u003d [value: string]\nrawArtistAlias: org.apache.spark.sql.Dataset[String] \u003d [value: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543251284569_-1687532344",
      "id": "20181126-165444_1483705676",
      "dateCreated": "2018-11-26 16:54:44.569",
      "dateStarted": "2018-11-28 17:58:58.776",
      "dateFinished": "2018-11-28 17:58:59.706",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Helper functions\nThose are functions to build well-structured `Dataframe`s, broadcasted mappings and so on...",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:59.790",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eHelper functions\u003c/h2\u003e\n\u003cp\u003eThose are functions to build well-structured \u003ccode\u003eDataframe\u003c/code\u003es, broadcasted mappings and so on\u0026hellip;\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252230033_2021862150",
      "id": "20181126-171030_361856095",
      "dateCreated": "2018-11-26 17:10:30.033",
      "dateStarted": "2018-11-28 17:58:59.856",
      "dateFinished": "2018-11-28 17:58:59.864",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Maps `rawArtistData` to a `DataFrame` of `[\"id\", \"name\"]`",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:58:59.956",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMaps \u003ccode\u003erawArtistData\u003c/code\u003e to a \u003ccode\u003eDataFrame\u003c/code\u003e of \u003ccode\u003e[\u0026quot;id\u0026quot;, \u0026quot;name\u0026quot;]\u003c/code\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252468273_-521015306",
      "id": "20181126-171428_1192781020",
      "dateCreated": "2018-11-26 17:14:28.274",
      "dateStarted": "2018-11-28 17:59:00.009",
      "dateFinished": "2018-11-28 17:59:00.016",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/**\n    * Maps rawArtistData to a DataFrame of [\"id\", \"name\"].\n    *\n    * @param rawArtistData artistid artist_name\n    * @return a DataFrame of [\"id\", \"name\"]\n*/\ndef buildArtistByID(rawArtistData: Dataset[String]): DataFrame \u003d {\n    rawArtistData\n        .flatMap { line \u003d\u003e\n            val (id, name): (String, String) \u003d line.span(_ !\u003d \u0027\\t\u0027)\n            if (name.isEmpty) {\n                None\n            } else {\n                try {\n                    Some((id.toInt, name.trim))\n                } catch {\n                    case _: NumberFormatException \u003d\u003e None\n                }\n            }\n        }\n    .toDF(\"id\", \"name\")\n}",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:00.108",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "buildArtistByID: (rawArtistData: org.apache.spark.sql.Dataset[String])org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252477305_-420810657",
      "id": "20181126-171437_2063993704",
      "dateCreated": "2018-11-26 17:14:37.305",
      "dateStarted": "2018-11-28 17:59:00.165",
      "dateFinished": "2018-11-28 17:59:00.774",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Maps `rawArtistAlias` to a `Map` of `[\"badid\", \"goodid\"]`",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:00.872",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMaps \u003ccode\u003erawArtistAlias\u003c/code\u003e to a \u003ccode\u003eMap\u003c/code\u003e of \u003ccode\u003e[\u0026quot;badid\u0026quot;, \u0026quot;goodid\u0026quot;]\u003c/code\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252494086_353605463",
      "id": "20181126-171454_1771057977",
      "dateCreated": "2018-11-26 17:14:54.086",
      "dateStarted": "2018-11-28 17:59:00.940",
      "dateFinished": "2018-11-28 17:59:00.948",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/**\n    * Maps rawArtistAlias to a Map of [\"badid\", \"goodid\"].\n    *\n    * @param rawArtistAlias badid goodid\n    * @return a mapping between artists\n*/\ndef buildArtistAlias(rawArtistAlias: Dataset[String]): Map[Int, Int] \u003d {\n    rawArtistAlias\n        .flatMap { line \u003d\u003e\n            val Array(artist, alias): Array[String] \u003d line.split(\u0027\\t\u0027)\n            if (artist.isEmpty) {\n                None\n            } else {\n                Some((artist.toInt, alias.toInt))\n            }\n        }\n        .collect\n        .toMap\n}",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:01.042",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "buildArtistAlias: (rawArtistAlias: org.apache.spark.sql.Dataset[String])scala.collection.Map[Int,Int]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252528778_-42670970",
      "id": "20181126-171528_1330272150",
      "dateCreated": "2018-11-26 17:15:28.778",
      "dateStarted": "2018-11-28 17:59:01.106",
      "dateFinished": "2018-11-28 17:59:01.752",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Build counts by taking into account canonical IDs from the broadcasted mapping",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:01.811",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eBuild counts by taking into account canonical IDs from the broadcasted mapping\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252606505_-1234351238",
      "id": "20181126-171646_1101454015",
      "dateCreated": "2018-11-26 17:16:46.505",
      "dateStarted": "2018-11-28 17:59:01.884",
      "dateFinished": "2018-11-28 17:59:01.899",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/**\n    * Build counts by taking into account canonical IDs from the broadcasted mapping.\n    *\n    * @param rawUserArtistData userid artistid playcount\n    * @param bArtistAlias broadcasted mapping between IDs\n    * @return a DataFrame of [\"user\", \"artist\", \"count\"]\n*/\ndef buildCounts(rawUserArtistData: Dataset[String],\n                bArtistAlias: Broadcast[Map[Int, Int]]): DataFrame \u003d {\n    rawUserArtistData\n        .map { line \u003d\u003e\n            val Array(userID, artistID, count): Array[Int] \u003d line.split(\u0027 \u0027).map(_.toInt)\n            val finalArtistID: Int                         \u003d bArtistAlias.value.getOrElse(artistID, artistID)\n        (userID, finalArtistID, count)\n        }\n    .toDF(\"user\", \"artist\", \"count\")\n}",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:01.983",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "buildCounts: (rawUserArtistData: org.apache.spark.sql.Dataset[String], bArtistAlias: org.apache.spark.broadcast.Broadcast[scala.collection.Map[Int,Int]])org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252618429_757631475",
      "id": "20181126-171658_1010087738",
      "dateCreated": "2018-11-26 17:16:58.429",
      "dateStarted": "2018-11-28 17:59:02.058",
      "dateFinished": "2018-11-28 17:59:02.585",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Builds a `DataFrame` of the TOP `howMany` recommendations for user `userID`",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:02.663",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eBuilds a \u003ccode\u003eDataFrame\u003c/code\u003e of the TOP \u003ccode\u003ehowMany\u003c/code\u003e recommendations for user \u003ccode\u003euserID\u003c/code\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252626443_1109769834",
      "id": "20181126-171706_1843500540",
      "dateCreated": "2018-11-26 17:17:06.443",
      "dateStarted": "2018-11-28 17:59:02.848",
      "dateFinished": "2018-11-28 17:59:02.858",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/**\n    * Builds a DataFrame of the TOP howMany recommendations for user userID.\n    *\n    * @param model model built by the ALS method\n    * @param userID ID of the user to make recommendations\n    * @param howMany offset for the top\n    * @return a DataFrame of [\"artist\", \"prediction\"]\n*/\ndef makeRecommendations(model: ALSModel, userID: Int, howMany: Int): DataFrame \u003d {\n    val toRecommend: DataFrame \u003d\n        model.itemFactors.select($\"id\".as(\"artist\")).withColumn(\"user\", lit(userID))\n    model\n        .transform(toRecommend)\n        .select(\"artist\", \"prediction\")\n        .orderBy($\"prediction\".desc)\n        .limit(howMany)\n}",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:02.948",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "makeRecommendations: (model: org.apache.spark.ml.recommendation.ALSModel, userID: Int, howMany: Int)org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252636801_1313786248",
      "id": "20181126-171716_914645117",
      "dateCreated": "2018-11-26 17:17:16.801",
      "dateStarted": "2018-11-28 17:59:03.015",
      "dateFinished": "2018-11-28 17:59:03.493",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Evaluates the mean AUC score for a selected model",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:03.522",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eEvaluates the mean AUC score for a selected model\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252646807_1049922159",
      "id": "20181126-171726_1846066318",
      "dateCreated": "2018-11-26 17:17:26.808",
      "dateStarted": "2018-11-28 17:59:03.637",
      "dateFinished": "2018-11-28 17:59:03.651",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/**\n    * Evaluates the mean AUC score for a selected model.\n    *\n    * @param positiveData cross-validation set (10% of the data)\n    * @param bAllArtistIDs broadcasted array of all artist IDs\n    * @param predictFunction prediction function of the ALS model\n    * @return the mean AUC score\n*/\ndef areaUnderCurve(positiveData: DataFrame,\n                    bAllArtistIDs: Broadcast[Array[Int]],\n                    predictFunction: DataFrame \u003d\u003e DataFrame): Double \u003d {\n    val positivePredictions: DataFrame \u003d predictFunction(positiveData.select(\"user\", \"artist\"))\n        .withColumnRenamed(\"prediction\", \"positivePrediction\")\n\n    val negativeData: DataFrame \u003d positiveData\n        .select(\"user\", \"artist\")\n        .as[(Int, Int)]\n        .groupByKey { case (user, _) \u003d\u003e user }\n        .flatMapGroups {\n            case (userID, userIDAndPosArtistIDs) \u003d\u003e\n            val random: Random \u003d new Random()\n            val posItemIDSet\n                : Set[Int]                   \u003d userIDAndPosArtistIDs.map { case (_, artist) \u003d\u003e artist }.toSet\n            val negative: ArrayBuffer[Int] \u003d new ArrayBuffer[Int]()\n            val allArtistIDs: Array[Int]   \u003d bAllArtistIDs.value\n            var i: Int                     \u003d 0\n            while (i \u003c allArtistIDs.length \u0026\u0026 negative.size \u003c posItemIDSet.size) {\n                val artistID: Int \u003d allArtistIDs(random.nextInt(allArtistIDs.length))\n                if (!posItemIDSet.contains(artistID)) {\n                    negative +\u003d artistID\n                }\n                i +\u003d 1\n            }\n        negative.map(artistID \u003d\u003e (userID, artistID))\n        }\n        .toDF(\"user\", \"artist\")\n\n    val negativePredictions: DataFrame \u003d\n        predictFunction(negativeData).withColumnRenamed(\"prediction\", \"negativePrediction\")\n\n    val joinedPredictions: DataFrame \u003d positivePredictions\n        .join(negativePredictions, \"user\")\n        .select(\"user\", \"positivePrediction\", \"negativePrediction\")\n        .cache\n\n    val allCounts: DataFrame \u003d\n        joinedPredictions.groupBy(\"user\").agg(count(lit(\"1\")).as(\"total\")).select(\"user\", \"total\")\n\n    val correctCounts: DataFrame \u003d joinedPredictions\n        .filter($\"positivePrediction\" \u003e $\"negativePrediction\")\n        .groupBy(\"user\")\n        .agg(count(\"user\").as(\"correct\"))\n        .select(\"user\", \"correct\")\n\n    val meanAUC: Double \u003d allCounts\n        .join(correctCounts, Seq(\"user\"), \"left_outer\")\n        .select($\"user\", (coalesce($\"correct\", lit(0)) / $\"total\").as(\"auc\"))\n        .agg(mean(\"auc\"))\n        .as[Double]\n        .first\n\n    joinedPredictions.unpersist\n\n    meanAUC\n}",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:03.737",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "areaUnderCurve: (positiveData: org.apache.spark.sql.DataFrame, bAllArtistIDs: org.apache.spark.broadcast.Broadcast[Array[Int]], predictFunction: org.apache.spark.sql.DataFrame \u003d\u003e org.apache.spark.sql.DataFrame)Double\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252664846_1817674255",
      "id": "20181126-171744_1383433228",
      "dateCreated": "2018-11-26 17:17:44.846",
      "dateStarted": "2018-11-28 17:59:03.791",
      "dateFinished": "2018-11-28 17:59:04.639",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Will allow to compare the mean AUC score against the AUC of predicting the most listened artists",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:04.697",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWill allow to compare the mean AUC score against the AUC of predicting the most listened artists\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252672198_-383352290",
      "id": "20181126-171752_1633629648",
      "dateCreated": "2018-11-26 17:17:52.198",
      "dateStarted": "2018-11-28 17:59:04.773",
      "dateFinished": "2018-11-28 17:59:04.782",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/**\n    * Will allow to compare the mean AUC score against the AUC of predicting the most listened artists.\n    *\n    * @param train training set (90% of the data)\n    * @param allData all data\n    * @return a DataFrame of [\"user\", \"artist\", \"prediction\"]\n*/\ndef predictMostListened(train: DataFrame)(allData: DataFrame): DataFrame \u003d {\n    val listenCounts: DataFrame \u003d\n        train.groupBy(\"artist\").agg(sum(\"count\").as(\"prediction\")).select(\"artist\", \"prediction\")\n    allData.join(listenCounts, Seq(\"artist\"), \"left_outer\").select(\"user\", \"artist\", \"prediction\")\n}",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:04.873",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "predictMostListened: (train: org.apache.spark.sql.DataFrame)(allData: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252684531_-1483319096",
      "id": "20181126-171804_1073218125",
      "dateCreated": "2018-11-26 17:18:04.531",
      "dateStarted": "2018-11-28 17:59:04.938",
      "dateFinished": "2018-11-28 17:59:05.340",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Preparation\nShows how to parse the raw datasets and displays some statistics.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:05.342",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eShows how to parse the raw datasets and displays some statistics.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252695389_1662119768",
      "id": "20181126-171815_1093575105",
      "dateCreated": "2018-11-26 17:18:15.389",
      "dateStarted": "2018-11-28 17:59:05.505",
      "dateFinished": "2018-11-28 17:59:05.512",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval userArtistDF: DataFrame \u003d rawUserArtistData.map { line \u003d\u003e\n    val Array(user, artist, _*): Array[String] \u003d line.split(\u0027 \u0027)\n    (user.toInt, artist.toInt)\n}.toDF(\"user\", \"artist\")\n\nuserArtistDF.registerTempTable(\"userArtist\")",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:05.602",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "userArtistDF: org.apache.spark.sql.DataFrame \u003d [user: int, artist: int]\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543252725492_-83621787",
      "id": "20181126-171845_1128721500",
      "dateCreated": "2018-11-26 17:18:45.492",
      "dateStarted": "2018-11-28 17:59:05.669",
      "dateFinished": "2018-11-28 17:59:06.494",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Type checking\nSpark MLlib\u0027s ALS implementation is more efficient when IDs are numeric, even more so if they are `Int`.\nWe can format the data accordingly if IDs don\u0027t exceed `Int.MaxValue \u003d 2147483647`.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:06.575",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eType checking\u003c/h3\u003e\n\u003cp\u003eSpark MLlib\u0026rsquo;s ALS implementation is more efficient when IDs are numeric, even more so if they are \u003ccode\u003eInt\u003c/code\u003e.\u003cbr/\u003eWe can format the data accordingly if IDs don\u0026rsquo;t exceed \u003ccode\u003eInt.MaxValue \u003d 2147483647\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543343069539_1625922553",
      "id": "20181127-182429_265308249",
      "dateCreated": "2018-11-27 18:24:29.539",
      "dateStarted": "2018-11-28 17:59:06.648",
      "dateFinished": "2018-11-28 17:59:06.659",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect min(user), max(user), min(artist), max(artist) from userArtist",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:06.748",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "min(user)": "string",
                      "max(user)": "string",
                      "min(artist)": "string",
                      "max(artist)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "min(user)",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "max(user)",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "min(user)\tmax(user)\tmin(artist)\tmax(artist)\n1000002\t1000586\t1\t10787933\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543320187495_1646635777",
      "id": "20181127-120307_1446487674",
      "dateCreated": "2018-11-27 12:03:07.496",
      "dateStarted": "2018-11-28 17:59:06.820",
      "dateFinished": "2018-11-28 17:59:11.573",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval artistByID: DataFrame      \u003d buildArtistByID(rawArtistData)\nval artistAlias: Map[Int, Int] \u003d buildArtistAlias(rawArtistAlias)\n\nval (badID, goodID): (Int, Int) \u003d artistAlias.head",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:11.662",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "artistByID: org.apache.spark.sql.DataFrame \u003d [id: int, name: string]\nartistAlias: scala.collection.Map[Int,Int] \u003d Map(1208690 -\u003e 1003926, 2012757 -\u003e 4569, 6949139 -\u003e 1085752, 1109727 -\u003e 1239120, 6772751 -\u003e 1244705, 2070533 -\u003e 1021544, 1157679 -\u003e 2194, 9969617 -\u003e 5630, 2034496 -\u003e 1116214, 6764342 -\u003e 40, 1272489 -\u003e 1278238, 2108744 -\u003e 1009267, 10349857 -\u003e 1000052, 2145319 -\u003e 1020463, 2126338 -\u003e 2717, 10165456 -\u003e 1001169, 6779368 -\u003e 1239506, 10278137 -\u003e 1001523, 9939075 -\u003e 1329390, 2037201 -\u003e 1274155, 1248585 -\u003e 2885, 1106945 -\u003e 1399, 6811322 -\u003e 1019016, 9978396 -\u003e 1784, 6676961 -\u003e 1086433, 2117821 -\u003e 2611, 6863616 -\u003e 1277013, 6895480 -\u003e 1000993, 6831632 -\u003e 1246136, 1001719 -\u003e 1009727, 10135633 -\u003e 4250, 7029291 -\u003e 1034635, 6967939 -\u003e 1002734, 6864694 -\u003e 1017311, 1237279 -\u003e 1029752, 6793956 -\u003e 1283231, 1208609 -\u003e 1000699, 6693428 -\u003e 1100258, 6851744 -\u003e 12758...badID: Int \u003d 1208690\ngoodID: Int \u003d 1003926\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543323576734_1632055451",
      "id": "20181127-125936_471400893",
      "dateCreated": "2018-11-27 12:59:36.735",
      "dateStarted": "2018-11-28 17:59:11.731",
      "dateFinished": "2018-11-28 17:59:13.166",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Example of ambiguity on artist id",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:13.241",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample of ambiguity on artist id\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543347157804_2019196951",
      "id": "20181127-193237_298791502",
      "dateCreated": "2018-11-27 19:32:37.806",
      "dateStarted": "2018-11-28 17:59:13.299",
      "dateFinished": "2018-11-28 17:59:13.315",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nartistByID.filter($\"id\" isin (badID, goodID)).registerTempTable(\"ambiguities\")",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:13.399",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543342912317_-1947330790",
      "id": "20181127-182152_1369832911",
      "dateCreated": "2018-11-27 18:21:52.320",
      "dateStarted": "2018-11-28 17:59:13.457",
      "dateFinished": "2018-11-28 17:59:13.933",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect * from ambiguities",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:13.961",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 102.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\n1208690\tCollective Souls\n1003926\tCollective Soul\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543425854695_1681493566",
      "id": "20181128-172414_981631297",
      "dateCreated": "2018-11-28 17:24:14.695",
      "dateStarted": "2018-11-28 17:59:14.089",
      "dateFinished": "2018-11-28 17:59:16.048",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Model\nApproximates $$A \u003d XY^T$$ by minimizing $$|A_iY(Y^TY)^{-1}) - X_i|$$ with the Alternating Least Square (ALS) method.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:16.105",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eModel\u003c/h2\u003e\n\u003cp\u003eApproximates $$A \u003d XY^T$$ by minimizing $$|A_iY(Y^TY)^{-1}) - X_i|$$ with the Alternating Least Square (ALS) method.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543347511250_1778218783",
      "id": "20181127-193831_213710475",
      "dateCreated": "2018-11-27 19:38:31.250",
      "dateStarted": "2018-11-28 17:59:16.167",
      "dateFinished": "2018-11-28 17:59:16.179",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval bArtistAlias: Broadcast[Map[Int, Int]] \u003d spark.sparkContext.broadcast(buildArtistAlias(rawArtistAlias))\nval allData: DataFrame \u003d buildCounts(rawUserArtistData, bArtistAlias).cache",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:16.268",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "bArtistAlias: org.apache.spark.broadcast.Broadcast[scala.collection.Map[Int,Int]] \u003d Broadcast(239)\nallData: org.apache.spark.sql.DataFrame \u003d [user: int, artist: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543342909986_271131691",
      "id": "20181127-182149_1611491601",
      "dateCreated": "2018-11-27 18:21:49.986",
      "dateStarted": "2018-11-28 17:59:16.350",
      "dateFinished": "2018-11-28 17:59:18.731",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval model: ALSModel \u003d new ALS().setSeed(Random.nextLong()).setImplicitPrefs(true).setRank(10).setRegParam(0.01).setAlpha(1.0).setMaxIter(5).setUserCol(\"user\").setItemCol(\"artist\").setRatingCol(\"count\").setPredictionCol(\"prediction\").fit(allData)\n\nallData.unpersist",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:18.787",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "model: org.apache.spark.ml.recommendation.ALSModel \u003d als_94cf144ae7fd\nres102: allData.type \u003d [user: int, artist: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543347716013_649723831",
      "id": "20181127-194156_1559790105",
      "dateCreated": "2018-11-27 19:41:56.013",
      "dateStarted": "2018-11-28 17:59:18.859",
      "dateFinished": "2018-11-28 17:59:28.346",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval userID: Int \u003d 1000002\nval artistByID: DataFrame \u003d buildArtistByID(rawArtistData)",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:28.404",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "userID: Int \u003d 1000002\nartistByID: org.apache.spark.sql.DataFrame \u003d [id: int, name: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543347825232_116498480",
      "id": "20181127-194345_1500486232",
      "dateCreated": "2018-11-27 19:43:45.232",
      "dateStarted": "2018-11-28 17:59:28.456",
      "dateFinished": "2018-11-28 17:59:28.825",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Top 5 recommendations for user `1000002`",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:28.858",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTop 5 recommendations for user \u003ccode\u003e1000002\u003c/code\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543347973969_1671977361",
      "id": "20181127-194613_525705902",
      "dateCreated": "2018-11-27 19:46:13.969",
      "dateStarted": "2018-11-28 17:59:28.906",
      "dateFinished": "2018-11-28 17:59:28.912",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval topRecommendations: DataFrame \u003d makeRecommendations(model, userID, 5)\ntopRecommendations.registerTempTable(\"topRecommendations\")",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:29.007",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "topRecommendations: org.apache.spark.sql.DataFrame \u003d [artist: int, prediction: float]\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543347970436_-2089213639",
      "id": "20181127-194610_1849822109",
      "dateCreated": "2018-11-27 19:46:10.436",
      "dateStarted": "2018-11-28 17:59:29.069",
      "dateFinished": "2018-11-28 17:59:29.533",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect * from topRecommendations",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:29.572",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 196.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "artist": "string",
                      "prediction": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "artist\tprediction\n1000881\t1.4543387\n1786\t1.4493582\n581\t1.3576965\n1825\t1.3545297\n1501\t1.3152934\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543348040870_-263972217",
      "id": "20181127-194720_1253313624",
      "dateCreated": "2018-11-27 19:47:20.870",
      "dateStarted": "2018-11-28 17:59:29.620",
      "dateFinished": "2018-11-28 17:59:33.457",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval recommendedArtistIDs: Array[Int] \u003d topRecommendations.select(\"artist\").as[Int].collect",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:33.555",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "recommendedArtistIDs: Array[Int] \u003d Array(1000881, 1786, 581, 1825, 1501)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543348074977_-1321659201",
      "id": "20181127-194754_1080964376",
      "dateCreated": "2018-11-27 19:47:54.977",
      "dateStarted": "2018-11-28 17:59:33.648",
      "dateFinished": "2018-11-28 17:59:40.333",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### And the artist names",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:40.430",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eAnd the artist names\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543348086846_-40700647",
      "id": "20181127-194806_2127255082",
      "dateCreated": "2018-11-27 19:48:06.846",
      "dateStarted": "2018-11-28 17:59:40.492",
      "dateFinished": "2018-11-28 17:59:40.500",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nartistByID.filter($\"id\" isin (recommendedArtistIDs: _*)).registerTempTable(\"topArtists\")\n\nmodel.userFactors.unpersist\nmodel.itemFactors.unpersist",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:40.592",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\nres109: model.userFactors.type \u003d [id: int, features: array\u003cfloat\u003e]\nres110: model.itemFactors.type \u003d [id: int, features: array\u003cfloat\u003e]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543348104728_164627186",
      "id": "20181127-194824_899620112",
      "dateCreated": "2018-11-27 19:48:24.728",
      "dateStarted": "2018-11-28 17:59:40.665",
      "dateFinished": "2018-11-28 17:59:41.549",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect * from topArtists",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:41.572",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 202.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\n1000881\tHoward Shore\n581\tDepeche Mode\n1786\tBob Marley\n1825\tMegadeth\n1501\tWolfgang Amadeus Mozart\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543426184109_-1762995675",
      "id": "20181128-172944_1670188118",
      "dateCreated": "2018-11-28 17:29:44.111",
      "dateStarted": "2018-11-28 17:59:41.659",
      "dateFinished": "2018-11-28 17:59:44.198",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Evaluate\nRuns a grid search for tuning the hyperparameters of the ALS model.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:44.298",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eEvaluate\u003c/h2\u003e\n\u003cp\u003eRuns a grid search for tuning the hyperparameters of the ALS model.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427196261_-2030736929",
      "id": "20181128-174636_21061270",
      "dateCreated": "2018-11-28 17:46:36.262",
      "dateStarted": "2018-11-28 17:59:44.357",
      "dateFinished": "2018-11-28 17:59:44.367",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval Array(trainData, cvData): Array[Dataset[Row]] \u003d allData.randomSplit(Array(0.9, 0.1))\ntrainData.cache\ncvData.cache\n\nval allArtistIDs: Array[Int]             \u003d allData.select(\"artist\").as[Int].distinct.collect\nval bAllArtistIDs: Broadcast[Array[Int]] \u003d spark.sparkContext.broadcast(allArtistIDs)\n\nval mostListenedAUC: Double \u003d areaUnderCurve(cvData, bAllArtistIDs, predictMostListened(trainData))",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 17:59:44.457",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "trainData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [user: int, artist: int ... 1 more field]\ncvData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [user: int, artist: int ... 1 more field]\nres112: trainData.type \u003d [user: int, artist: int ... 1 more field]\nres113: cvData.type \u003d [user: int, artist: int ... 1 more field]\nallArtistIDs: Array[Int] \u003d Array(1, 1000006, 1000007, 1000009, 1000010, 1000013, 1000014, 1000017, 1000024, 1000025, 1000028, 1000031, 1000033, 1000042, 1000045, 1000054, 1000055, 1000056, 1000059, 1000062, 1000088, 1000099, 1000107, 1000113, 1000123, 1000127, 1000139, 1000140, 1000157, 1000183, 1000188, 1000201, 1000210, 1000243, 1000251, 1000260, 1000265, 1000266, 1000283, 1000288, 1000289, 1000293, 1000295, 1000302, 1000305, 1000315, 1000317, 1000322, 1000323, 1000325, 1000340, 1000343, 1000382, 1000424, 1000518, 1000438, 1000440, 1000450, 1000451, 1000456, 1000457, 1000481, 1000498, 1000503, 1000515, 1000520, 1000522, 1000569, 1000597, 1000620, 1000623, 1000625, 1000630, 1000631, 1000632, 1000639, 1000660, 1000674, 1000676, 1000677, 1000716, 1000724, 1000726, 1000727, 1000730, 10007...bAllArtistIDs: org.apache.spark.broadcast.Broadcast[Array[Int]] \u003d Broadcast(289)\nmostListenedAUC: Double \u003d 0.6515470998740993\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427219022_41322746",
      "id": "20181128-174659_1408389998",
      "dateCreated": "2018-11-28 17:46:59.022",
      "dateStarted": "2018-11-28 17:59:44.521",
      "dateFinished": "2018-11-28 18:00:01.169",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n#### The AUC if we recommend the most listened artists",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:01.252",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eThe AUC if we recommend the most listened artists\u003c/h4\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427856925_1788185069",
      "id": "20181128-175736_1916076170",
      "dateCreated": "2018-11-28 17:57:36.925",
      "dateStarted": "2018-11-28 18:00:01.310",
      "dateFinished": "2018-11-28 18:00:01.316",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nprintln(\"MOST LISTENED AUC: \" + mostListenedAUC)",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:01.412",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "MOST LISTENED AUC: 0.6515470998740993\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427655308_367843710",
      "id": "20181128-175415_40689311",
      "dateCreated": "2018-11-28 17:54:15.308",
      "dateStarted": "2018-11-28 18:00:01.488",
      "dateFinished": "2018-11-28 18:00:01.837",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n#### This step is the grid search, uncomment if you have a lot of computing power.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:01.891",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch4\u003eThis step is the grid search, uncomment if you have a lot of computing power.\u003c/h4\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427893499_-437586382",
      "id": "20181128-175813_1974547712",
      "dateCreated": "2018-11-28 17:58:13.499",
      "dateStarted": "2018-11-28 18:00:01.950",
      "dateFinished": "2018-11-28 18:00:01.955",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/*val evaluations: Seq[(Double, (Int, Double, Double))] \u003d\n    for (rank     \u003c- Seq(5, 30);\n        regParam \u003c- Seq(1.0, 0.0001);\n        alpha    \u003c- Seq(1.0, 40.0))\n        yield {\n            val model: ALSModel \u003d new ALS().setSeed(Random.nextLong()).setImplicitPrefs(true).setRank(rank).setRegParam(regParam).setAlpha(alpha).setMaxIter(20).setUserCol(\"user\").setItemCol(\"artist\").setRatingCol(\"count\").setPredictionCol(\"prediction\").fit(trainData)\n            val auc: Double \u003d areaUnderCurve(cvData, bAllArtistIDs, model.transform)\n            \n            model.userFactors.unpersist\n            model.itemFactors.unpersist\n\n            (auc, (rank, regParam, alpha))\n        }*/",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:02.048",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1543427677141_1313354852",
      "id": "20181128-175437_2003810576",
      "dateCreated": "2018-11-28 17:54:37.142",
      "dateStarted": "2018-11-28 18:00:02.104",
      "dateFinished": "2018-11-28 18:00:02.225",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Sorted AUC",
      "user": "anonymous",
      "dateUpdated": "2019-04-19 18:42:04.953",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eSorted AUC\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427768613_1794462761",
      "id": "20181128-175608_165066780",
      "dateCreated": "2018-11-28 17:56:08.613",
      "dateStarted": "2018-11-28 18:00:02.359",
      "dateFinished": "2018-11-28 18:00:02.363",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/*evaluations.sorted.reverse.foreach(println)*/\n\ntrainData.unpersist\ncvData.unpersist",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:02.460",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res120: trainData.type \u003d [user: int, artist: int ... 1 more field]\nres121: cvData.type \u003d [user: int, artist: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543427777376_-119610277",
      "id": "20181128-175617_1700706512",
      "dateCreated": "2018-11-28 17:56:17.377",
      "dateStarted": "2018-11-28 18:00:02.522",
      "dateFinished": "2018-11-28 18:00:02.940",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Recommend\nRecommends artists with the tuned hyperparameters of the ALS model.",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:03.025",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRecommend\u003c/h2\u003e\n\u003cp\u003eRecommends artists with the tuned hyperparameters of the ALS model.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543348125989_-1343497885",
      "id": "20181127-194845_703668101",
      "dateCreated": "2018-11-27 19:48:45.989",
      "dateStarted": "2018-11-28 18:00:03.074",
      "dateFinished": "2018-11-28 18:00:03.083",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval model: ALSModel \u003d new ALS().setSeed(Random.nextLong()).setImplicitPrefs(true).setRank(10).setRegParam(1.0).setAlpha(40.0).setMaxIter(20).setUserCol(\"user\").setItemCol(\"artist\").setRatingCol(\"count\").setPredictionCol(\"prediction\").fit(allData)\nallData.unpersist",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:03.175",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "model: org.apache.spark.ml.recommendation.ALSModel \u003d als_0a0d426b9a41\nres123: allData.type \u003d [user: int, artist: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543343232213_1521277508",
      "id": "20181127-182712_2137662407",
      "dateCreated": "2018-11-27 18:27:12.213",
      "dateStarted": "2018-11-28 18:00:03.237",
      "dateFinished": "2018-11-28 18:00:22.539",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval userID: Int                   \u003d 1000002\nval topRecommendations: DataFrame \u003d makeRecommendations(model, userID, 5)\n\nval recommendedArtistIDs: Array[Int] \u003d topRecommendations.select(\"artist\").as[Int].collect\nval artistByID: DataFrame            \u003d buildArtistByID(rawArtistData)",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:22.562",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "userID: Int \u003d 1000002\ntopRecommendations: org.apache.spark.sql.DataFrame \u003d [artist: int, prediction: float]\nrecommendedArtistIDs: Array[Int] \u003d Array(1001783, 1008329, 1001479, 1250312, 1247272)\nartistByID: org.apache.spark.sql.DataFrame \u003d [id: int, name: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543343258129_-275829899",
      "id": "20181127-182738_1752295069",
      "dateCreated": "2018-11-27 18:27:38.130",
      "dateStarted": "2018-11-28 18:00:22.681",
      "dateFinished": "2018-11-28 18:00:27.287",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Top 5 best recommendations for user `1000002`",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:27.325",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTop 5 best recommendations for user \u003ccode\u003e1000002\u003c/code\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543426713874_-1105807005",
      "id": "20181128-173833_1850413221",
      "dateCreated": "2018-11-28 17:38:33.874",
      "dateStarted": "2018-11-28 18:00:27.405",
      "dateFinished": "2018-11-28 18:00:27.416",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nartistByID.join(spark.createDataset(recommendedArtistIDs).toDF(\"id\"), \"id\").select(\"name\").registerTempTable(\"trueRecommendations\")\n\nmodel.userFactors.unpersist\nmodel.itemFactors.unpersist",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:27.506",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\nres127: model.userFactors.type \u003d [id: int, features: array\u003cfloat\u003e]\nres128: model.itemFactors.type \u003d [id: int, features: array\u003cfloat\u003e]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543343327376_2037615983",
      "id": "20181127-182847_1238162341",
      "dateCreated": "2018-11-27 18:28:47.376",
      "dateStarted": "2018-11-28 18:00:27.563",
      "dateFinished": "2018-11-28 18:00:28.247",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect * from trueRecommendations",
      "user": "anonymous",
      "dateUpdated": "2018-11-28 18:00:28.267",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 196.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\n植松伸夫\nBasil Poledouris\nNeil Young \u0026 Crazy Horse\nRen \u0026 Stimpy\nCombustible Edison\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543426670323_438663652",
      "id": "20181128-173750_991045332",
      "dateCreated": "2018-11-28 17:37:50.323",
      "dateStarted": "2018-11-28 18:00:28.359",
      "dateFinished": "2018-11-28 18:00:30.374",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Chapter 3 - Recommending Music and the Audioscrobbler Data Set",
  "id": "2DW53Y1HS",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}